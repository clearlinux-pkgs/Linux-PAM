From 6b2b45c1f4d2c8d0d973b50ab3f764b991e1febc Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Tue, 27 Feb 2024 14:40:09 -0800
Subject: [PATCH 3/4] pam_shells: Support a stateless configuration by default

Signed-off-by: William Douglas <william.douglas@intel.com>
---
 modules/pam_shells/pam_shells.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/modules/pam_shells/pam_shells.c b/modules/pam_shells/pam_shells.c
index d5f8ec3..d5dca13 100644
--- a/modules/pam_shells/pam_shells.c
+++ b/modules/pam_shells/pam_shells.c
@@ -27,6 +27,7 @@
 #include <security/pam_ext.h>
 
 #define SHELL_FILE "/etc/shells"
+#define DEFAULT_SHELL_FILE "/usr/share/defaults/etc/shells"
 #define SHELLS "shells"
 #define ETCDIR "/etc"
 #define DEFAULT_SHELL "/bin/sh"
@@ -55,6 +56,7 @@ static int perform_check(pam_handle_t *pamh)
     const char *userName;
     const char *userShell;
     struct passwd * pw;
+    const char *shellPath = NULL;
 
     retval = pam_get_user(pamh, &userName, NULL);
     if (retval != PAM_SUCCESS) {
@@ -120,12 +122,19 @@ static int perform_check(pam_handle_t *pamh)
     char *p = NULL;
     size_t n = 0;
 
-    if (!check_file(SHELL_FILE, pamh))
-        return PAM_AUTH_ERR;
+    if (!check_file(SHELL_FILE, pamh)) {
+        if (!check_file(DEFAULT_SHELL_FILE, pamh)) {
+            return PAM_AUTH_ERR;
+        }
+        shellPath = DEFAULT_SHELL_FILE;
+    } else {
+        /* System administrator has provided /etc/shells */
+        shellPath = SHELL_FILE;
+    }
 
-    shellFile = fopen(SHELL_FILE,"r");
+    shellFile = fopen(shellPath,"r");
     if (shellFile == NULL) {       /* Check that we opened it successfully */
-	pam_syslog(pamh, LOG_ERR, "Error opening %s: %m", SHELL_FILE);
+	pam_syslog(pamh, LOG_ERR, "Error opening %s: %m", shellPath);
 	return PAM_SERVICE_ERR;
     }
 
-- 
2.43.0

